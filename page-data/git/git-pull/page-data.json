{"componentChunkName":"component---src-templates-blog-post-js","path":"/git/git-pull/","result":{"data":{"site":{"siteMetadata":{"title":"Memory !== Record","author":"Ayaan","siteUrl":"https://alpaca92.github.io","comment":{"disqusShortName":"","utterances":"Alpaca92/alpaca92.github.io"},"sponsor":{"buyMeACoffeeId":"ayaan92"}}},"markdownRemark":{"id":"cf11e28e-698b-558b-bb76-5d6c82c9c082","excerpt":"최근에 을 하면 멋대로 머지 내역을 커밋하여 로그가 쓸데없이 많아지고 있다 혼자서 관리중인 repository라면 상관없겠지만 업무용 repository라면 다른 팀원들이 이 때문에 불편을 겪을 수 있다 what is git pull 로 에 대한 도움말을 보면 If the current branch is behind the remote, then by default it will fast-forward the current branch to match the remote. If the…","html":"<p>최근에 <code class=\"language-text\">git pull</code>을 하면 멋대로 머지 내역을 커밋하여 로그가 쓸데없이 많아지고 있다</p>\n<p>혼자서 관리중인 repository라면 상관없겠지만 업무용 repository라면 다른 팀원들이 이 때문에 불편을 겪을 수 있다</p>\n<h1 id=\"what-is-git-pull\" style=\"position:relative;\"><a href=\"#what-is-git-pull\" aria-label=\"what is git pull permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>what is git pull</h1>\n<p><code class=\"language-text\">git pull --help</code>로 <code class=\"language-text\">git pull</code>에 대한 도움말을 보면</p>\n<blockquote>\n<p>If the current branch is behind the remote, then by default it will fast-forward the current branch to match the remote. If the current branch and the remote have diverged, the user needs to specify how to reconcile the divergent branches with —rebase or —no-rebase (or the corresponding configuration option in pull.rebase).</p>\n</blockquote>\n<p><code class=\"language-text\">fast-forward</code> 관계의 경우 빠르게 병합되지만 그렇지 않은 경우에는 <code class=\"language-text\">--rebase</code>, <code class=\"language-text\">--no-rebase</code>의 옵션을 사용하여야 한다고 설명한다</p>\n<p>보다 정확하게는 <code class=\"language-text\">git pull = git fetch + git merge(or git rebase)</code>라고 할 수 있다</p>\n<h1 id=\"git-pull-hint\" style=\"position:relative;\"><a href=\"#git-pull-hint\" aria-label=\"git pull hint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>git pull hint</h1>\n<p>현재 <code class=\"language-text\">git pull</code>을 하면 아래와 같은 메세지가 계속 출력된다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ git pull\n\nhint: Pulling without specifying how to reconcile divergent branches is\nhint: discouraged. You can squelch this message by running one of the following\nhint: commands sometime before your next pull:\nhint:\nhint:   git config pull.rebase false  # merge (the default strategy)\nhint:   git config pull.rebase true   # rebase\nhint:   git config pull.ff only       # fast-forward only\nhint:\nhint: You can replace &quot;git config&quot; with &quot;git config --global&quot; to set a default\nhint: preference for all repositories. You can also pass --rebase, --no-rebase,\nhint: or --ff-only on the command line to override the configured default per\nhint: invocation.</code></pre></div>\n<p>그리고 커밋메세지도 함께 작성된다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">Merge branch &#39;some_branch&#39; of *** into some_branch</code></pre></div>\n<p>위와 같은 일이 일어나는 이유를 알아보기 위해 <code class=\"language-text\">git pull -h</code>로 설명을 보도록 하자</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ git pull -h\n\n# (전략)\n# --commit              perform a commit if the merge succeeds (default)\n# (후략)</code></pre></div>\n<p><code class=\"language-text\">git pull</code>은 merge가 성공하면 그에 대한 commit을 진행하는 것이 기본 값이다</p>\n<p>따라서 원치 않게 커밋메세지가 쌓이는 것이다</p>\n<h1 id=\"해결방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95\" aria-label=\"해결방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결방법</h1>\n<p>위 현상은 원격 저장소와 로컬 저장소 모두 새로운 커밋을 가지고 있을 때 <code class=\"language-text\">Non fast-forward</code>가 발생하기 때문이다</p>\n<p>이러한 병합 커밋을 만들지 않으려면 <code class=\"language-text\">--rebase</code>옵션으로 병합을 시키면 된다(단, 이때 스테이징되지 않은 변경사항이 있으면 안된다)</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git pull --rebase</code></pre></div>\n<p>이를 매번 하는 것은 귀찮으니 글로벌 설정에 <code class=\"language-text\">--rebase</code>옵션을 넣어주면 앞으로 <code class=\"language-text\">git pull</code>만으로도 동일한 일을 수행할 수 있게된다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">gitconfig --global pull.rebase ture</code></pre></div>\n<h1 id=\"git-pull-options\" style=\"position:relative;\"><a href=\"#git-pull-options\" aria-label=\"git pull options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>git pull options</h1>\n<p>위에서 살펴본 <code class=\"language-text\">--rebase</code> 이외에도 <code class=\"language-text\">--ff-only</code>, <code class=\"language-text\">--no-rebase</code>라는 옵션이 존재한다</p>\n<p>그렇다면 이 옵션들은 각각 무슨 역할을 하는걸까?</p>\n<h2 id=\"git-pull-ff-only\" style=\"position:relative;\"><a href=\"#git-pull-ff-only\" aria-label=\"git pull ff only permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>git pull —ff-only</h2>\n<p>이는 <code class=\"language-text\">fast-forward only</code>라는 뜻이며, <code class=\"language-text\">fast-forward</code>란 간단하게 말해 직접적으로 연결이 되어있는 관계를 말한다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># commit B는 commit D의 fast-forward\nA ⎯ B ⎯ C ⎯ D\n\n# commit F에 commit D의 history가 포함되지 않기 때문에 non fast-forward\nA ⎯ B ⎯ C ⎯ D\n         ⎿ E ⎯ F</code></pre></div>\n<p>따라서 <code class=\"language-text\">--ff-only</code> 옵션을 사용하게 되면 <code class=\"language-text\">fast-forward</code>일 때에만 git pull을 실행하며, <code class=\"language-text\">Non fast-forward</code>일 때에는 오류가 발생한다</p>\n<p><code class=\"language-text\">* branch master -> FETCH_HEAD 593a5e1..208efa3 master -> origin/master fatal: Not possible to fast-forward, aborting</code></p>\n<p>이 경우에는 <code class=\"language-text\">git rebase</code>, <code class=\"language-text\">git merge</code>등으로 해당 관계를 정리해줘야 한다</p>\n<blockquote>\n<p>🍪 원격 저장소로부터 가져온 모든 브랜치의 HEAD를 .git/FETCH<em>HEAD에 기록하며, FETCH</em>HEAD는 원격 저장소로부터 가져온 브랜치의 HEAD를 의미한다</p>\n</blockquote>\n<h2 id=\"git-pull-no-rebase\" style=\"position:relative;\"><a href=\"#git-pull-no-rebase\" aria-label=\"git pull no rebase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>git pull —no-rebase</h2>\n<p>위 옵션은 <strong>기본 값</strong>으로 원격 저장소와 로컬 저장소의 형상이 다른 경우 이를 merge하고 commit을 남긴다</p>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>*references</h2>\n<ol>\n<li><a href=\"https://stackoverflow.com/questions/15439527/git-why-merge-branch-master-of-when-pull-and-push\">git: Why “Merge branch ‘master’ of … ”? when pull and push</a></li>\n<li><a href=\"https://parksb.github.io/article/28.html\">Git 사용 중 자주 만나는 이슈 정리</a></li>\n<li><a href=\"https://blog.naver.com/parkjy76/220308638231\">도식으로 보는 git-merge의 —ff, —no-ff, —squash의 차이점</a></li>\n<li><a href=\"https://wookkl.tistory.com/46\">Git: pull strategy(전략, 종류)</a></li>\n</ol>","frontmatter":{"title":"git pull할때마다 나오는 hint 해결하기","date":"September 27, 2022"}}},"pageContext":{"slug":"/git/git-pull/","previous":{"fields":{"slug":"/react/recoil-기본/"},"frontmatter":{"title":"Recoil 기본"}},"next":{"fields":{"slug":"/react/react-lifecycle-with-hooks/"},"frontmatter":{"title":"React lifecycle vs hooks"}}}}}