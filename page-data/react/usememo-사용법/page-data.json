{"componentChunkName":"component---src-templates-blog-post-js","path":"/react/usememo-사용법/","result":{"data":{"site":{"siteMetadata":{"title":"Memory !== Record","author":"Ayaan","siteUrl":"https://alpaca92.github.io","comment":{"disqusShortName":"","utterances":"Alpaca92/alpaca92.github.io"},"sponsor":{"buyMeACoffeeId":"ayaan92"}}},"markdownRemark":{"id":"1508931a-5918-5590-8e36-1e7a1dd5afd8","excerpt":"React Hooks 중 하나인 함수에 대해 알아보도록 하자 1. Memoization 에서 가 바로 메모이제이션이다 메모이제이션에 대해 가볍게 알아보자면 기존에 수행한 연산 결과를 어딘가에 저장해두고 동일한 입력이 들어오면 재활용하여 메모리의 낭비를 줄이는 일종의 프로그래밍 기법이라고 생각하면 된다 즉, 는 중복연산을 피해 앱 성능을 최적화하기 위해 사용되는 훅입니다 2. useMemo 사용법 위 코드에서 버튼 Y를 클릭하면 콘솔에 아무것도 찍히지 않지만 버튼 X…","html":"<p>React Hooks 중 하나인 <code class=\"language-text\">useMemo</code>함수에 대해 알아보도록 하자</p>\n<h1 id=\"1-memoization\" style=\"position:relative;\"><a href=\"#1-memoization\" aria-label=\"1 memoization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Memoization</h1>\n<p><code class=\"language-text\">useMemo</code>에서 <code class=\"language-text\">Memo</code>가 바로 메모이제이션이다</p>\n<p>메모이제이션에 대해 가볍게 알아보자면 기존에 수행한 연산 결과를 어딘가에 저장해두고 동일한 입력이 들어오면 재활용하여 메모리의 낭비를 줄이는 일종의 프로그래밍 기법이라고 생각하면 된다</p>\n<p>즉, <code class=\"language-text\">useMemo</code>는 <strong>중복연산</strong>을 피해 앱 성능을 최적화하기 위해 사용되는 훅입니다</p>\n<h1 id=\"2-usememo-사용법\" style=\"position:relative;\"><a href=\"#2-usememo-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"2 usememo 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. useMemo 사용법</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useCallback<span class=\"token punctuation\">,</span> useMemo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ex<span class=\"token punctuation\">,</span> setEx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>why<span class=\"token punctuation\">,</span> setWhy<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// useMemo 사용하기</span>\n  <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">ex값이 변화하였습니다</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 두 개의 버튼을 설정했다. X버튼만이 ex를 변화시킨다.</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setEx</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">curr</span> <span class=\"token operator\">=></span> curr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token constant\">X</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setWhy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">curr2</span> <span class=\"token operator\">=></span> curr2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token constant\">Y</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드에서 버튼 Y를 클릭하면 콘솔에 아무것도 찍히지 않지만 버튼 X를 클릭하면 콘솔에 <code class=\"language-text\">ex값이 변화하였습니다</code>라고 찍힌다</p>\n<p><code class=\"language-text\">useEffect</code>를 안다면 쉽게 이해가 됐을텐데 <code class=\"language-text\">dependencies</code>를 배열로 주어졌기 때문에 해당 값들이 변화하면 <code class=\"language-text\">useMemo</code>안에 있는 함수를 실행해주는 것이다</p>\n<p><code class=\"language-text\">useMemo</code>는 다음과 같이 작성한다</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> memoizedValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">computeExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>📌 <code class=\"language-text\">useMemo</code>는 <strong>Memoization된 값</strong>을 반환한다</p>\n</blockquote>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>*references</h2>\n<ol>\n<li><a href=\"https://ko.reactjs.org/docs/hooks-reference.html#usememo\">Hooks API Reference : useMemo</a></li>\n<li><a href=\"https://basemenks.tistory.com/238\">useCallback 과 useMemo 의 차이</a></li>\n<li><a href=\"https://www.daleseo.com/react-hooks-use-memo/\">React Hooks: useMemo 사용법</a></li>\n</ol>","frontmatter":{"title":"useMemo 사용법","date":"April 27, 2022"}}},"pageContext":{"slug":"/react/usememo-사용법/","previous":{"fields":{"slug":"/dev/node-version-자동으로-변경하기/"},"frontmatter":{"title":"node version 자동으로 변경하기"}},"next":{"fields":{"slug":"/dev/aria-valuenow와-aria-valuetext에-대하여/"},"frontmatter":{"title":"aria-valuenow와 aria-valuetext에 대하여"}}}}}