{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/python으로-엑셀-읽고-쓰기/","result":{"data":{"site":{"siteMetadata":{"title":"Memory !== Record","author":"Ayaan","siteUrl":"https://alpaca92.github.io","comment":{"disqusShortName":"","utterances":"Alpaca92/alpaca92.github.io"},"sponsor":{"buyMeACoffeeId":"ayaan92"}}},"markdownRemark":{"id":"933e61bc-af04-5abf-8414-74384e51284c","excerpt":"와이프 회사에서 엑셀작업을 하는데 단순작업이 많다고해서 얘기를 들어보니 생각보다 금방 해결할 수 있는 문제들 같아서 겸사겸사 파이썬 공부를 시작했다 라이브러리를 찾아보니 파이썬 데이터 처리를 위한 국민 라이브러리인 가 있어 이를 사용해 보기로 하였다 ✔ 이 글에서 사용된 예제파일은 여기서 다운받을 수 있다 1. 판다스 설치하기 먼저 판다스를 설치해줘야 한다 📌 는 자바스크립트의 처럼 패키지를 관리해주는 프로그램으로 파이썬 v3.…","html":"<p>와이프 회사에서 엑셀작업을 하는데 단순작업이 많다고해서 얘기를 들어보니 생각보다 금방 해결할 수 있는 문제들 같아서 겸사겸사 파이썬 공부를 시작했다</p>\n<p>라이브러리를 찾아보니 파이썬 데이터 처리를 위한 국민 라이브러리인 <code class=\"language-text\">판다스(Pandas)</code>가 있어 이를 사용해 보기로 하였다</p>\n<blockquote>\n<p>✔ 이 글에서 사용된 예제파일은 <a href=\"https://go.microsoft.com/fwlink/?LinkID=521962\">여기</a>서 다운받을 수 있다</p>\n</blockquote>\n<h1 id=\"1-판다스-설치하기\" style=\"position:relative;\"><a href=\"#1-%ED%8C%90%EB%8B%A4%EC%8A%A4-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"1 판다스 설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 판다스 설치하기</h1>\n<p>먼저 판다스를 설치해줘야 한다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ pip install pandas</code></pre></div>\n<blockquote>\n<p>📌 <code class=\"language-text\">pip</code>는 자바스크립트의 <code class=\"language-text\">npm</code>처럼 패키지를 관리해주는 프로그램으로 파이썬 v3.4 이상을 설치 시 자동으로 같이 설치된다</p>\n</blockquote>\n<p>이를 설치하면 예제를 통해 간단한 데이터 테이블을 출력해볼 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"Name\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"Braund, Mr. Owen Harris\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"Allen, Mr. William Henry\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"Bonnell, Miss. Elizabeth\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">58</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Sex\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"male\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"female\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n                       Name  Age     Sex\n0   Braund, Mr. Owen Harris   22    male\n1  Allen, Mr. William Henry   35    male\n2  Bonnell, Miss. Elizabeth   58  female\n\"\"\"</span></code></pre></div>\n<h1 id=\"2-판다스로-엑셀-열어보기\" style=\"position:relative;\"><a href=\"#2-%ED%8C%90%EB%8B%A4%EC%8A%A4%EB%A1%9C-%EC%97%91%EC%85%80-%EC%97%B4%EC%96%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"2 판다스로 엑셀 열어보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 판다스로 엑셀 열어보기</h1>\n<p>판다스는 간단하게 csv, xls, xlsx등을 열어볼 수 있다</p>\n<p>그 중에 최신 엑셀파일을 열어보기 위해서는 <code class=\"language-text\">openpyxl</code> 엔진을 사용하기 때문에 설치가 필요하다 <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html?highlight=read_excel\">참고</a></p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ pip install openpyxl</code></pre></div>\n<p>사용하기에 앞서 판다스에 데이터 구조에 대해 알아볼 필요가 있다</p>\n<p>판다스는 <code class=\"language-text\">Series</code>, <code class=\"language-text\">DataFrame</code>, <code class=\"language-text\">Panel</code>이 있는데 이중에 가장 많이 쓰이는 것은 <code class=\"language-text\">Series</code>, <code class=\"language-text\">DataFrame</code>이다</p>\n<p><code class=\"language-text\">Series</code>는 1차원 배열의 값에 대응하는 인덱스를 부여할 수 있는 구조이다</p>\n<p>처음의 예시에서 나이값만 출력해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\n0    22\n1    35\n2    58\nName: Age, dtype: int64\n\"\"\"</span></code></pre></div>\n<p>이러한 구조를 <code class=\"language-text\">Series</code>라고 하며 <code class=\"language-text\">Series</code>가 모여 하나의 <code class=\"language-text\">DataFrame</code>이 된다</p>\n<p>즉, <code class=\"language-text\">DataFrame</code>의 각 cloumn들은 <code class=\"language-text\">Series</code>인 것이다</p>\n<blockquote>\n<p>📌 <em>Each column in a <code class=\"language-text\">DataFrame</code> is a <code class=\"language-text\">Series</code></em></p>\n</blockquote>\n<p>이제 구조를 알아봤으니 엑셀 내용을 읽어 출력해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">ex <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"sample.xlsx\"</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">\"Sheet1\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token comment\"># DataFrame이 양이 많을 때에는 처음과 끝 5개씩 출력해준다</span></code></pre></div>\n<p>파일 경로와 읽고 싶은 엑셀 시트의 이름을 넣으면 되며 처음 혹은 끝의 데이터를 중점적으로 보고싶다면 <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.head.html?highlight=head\">.head()</a>, <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.tail.html?highlight=tail\">.tail()</a>메소드를 사용하면 된다</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">ex<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># DataFrame의 처음 5개를 보여줌</span>\nex<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># DataFrame의 끝 3개를 보여줌</span></code></pre></div>\n<p>각 column(열)의 데이터타입을 알고싶다면 아래와 같이 확인해볼 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nPassengerId      int64\nSurvived         int64\nPclass           int64\nName            object\nSex             object\nAge            float64\nSibSp            int64\nParch            int64\nTicket          object\nFare           float64\nCabin           object\nEmbarked        object\ndtype: object\n\"\"\"</span></code></pre></div>\n<p>이 중에 strings를 <code class=\"language-text\">object</code>로 표현하는게 조금 특이하다고 할 수 있다</p>\n<h1 id=\"3-판다스로-엑셀-작성하기\" style=\"position:relative;\"><a href=\"#3-%ED%8C%90%EB%8B%A4%EC%8A%A4%EB%A1%9C-%EC%97%91%EC%85%80-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"3 판다스로 엑셀 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 판다스로 엑셀 작성하기</h1>\n<p>판다스로 엑셀을 작성할 때는 prefix를 to로 바꿔주기만 하면 된다</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">ex<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"test.xlsx\"</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 'test.xlsx' has been created inside the root directory</span></code></pre></div>\n<p>여기서 <code class=\"language-text\">index=False</code>를 주는 이유는 기본값이 True인데 True일 때 A cloumn(첫 열)에 0, 1, 2, ···과 같이 인덱스를 적어주기 때문이다</p>\n<blockquote>\n<p>✔ 간단하게 엑셀 파일의 (행, 열)을 알고싶다면 <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shape.html?highlight=shape\">.shape</a>을 사용하도록 하자</p>\n</blockquote>\n<h1 id=\"4-판다스로-엑셀의-특정-데이터-선택하기\" style=\"position:relative;\"><a href=\"#4-%ED%8C%90%EB%8B%A4%EC%8A%A4%EB%A1%9C-%EC%97%91%EC%85%80%EC%9D%98-%ED%8A%B9%EC%A0%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0\" aria-label=\"4 판다스로 엑셀의 특정 데이터 선택하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 판다스로 엑셀의 특정 데이터 선택하기</h1>\n<blockquote>\n<p>📌 <em>Each column in a <code class=\"language-text\">DataFrame</code> is a <code class=\"language-text\">Series</code></em></p>\n</blockquote>\n<p>이 말을 기억하고 있다면 어느정도 감이 올 것이다</p>\n<h2 id=\"4-1-판다스로-특정-column-선택하기\" style=\"position:relative;\"><a href=\"#4-1-%ED%8C%90%EB%8B%A4%EC%8A%A4%EB%A1%9C-%ED%8A%B9%EC%A0%95-column-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0\" aria-label=\"4 1 판다스로 특정 column 선택하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-1. 판다스로 특정 column 선택하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Segment\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Country\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n              Segment                   Country\n0          Government                    Canada\n1          Government                   Germany\n2           Midmarket                    France\n3           Midmarket                   Germany\n4           Midmarket                    Mexico\n..                ...                       ...\n695    Small Business                    France\n696    Small Business                    Mexico\n697        Government                    Mexico\n698        Government                    Canada\n699  Channel Partners  United States of America\n\n[700 rows x 2 columns]\n\"\"\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Segment\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Country\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># pandas.core.frame.DataFrame</span></code></pre></div>\n<p><code class=\"language-text\">Series</code>를 모아서 만들었기 때문에 타입은 <code class=\"language-text\">DataFrame</code>이다</p>\n<h2 id=\"4-2-판다스로-특정-row-선택하기\" style=\"position:relative;\"><a href=\"#4-2-%ED%8C%90%EB%8B%A4%EC%8A%A4%EB%A1%9C-%ED%8A%B9%EC%A0%95-row-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0\" aria-label=\"4 2 판다스로 특정 row 선택하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-2. 판다스로 특정 row 선택하기</h2>\n<p>특정 row를 선택한다는 것은 엑셀에서 필터를 사용한다는 의미와 같다</p>\n<p>판다스는 간단한 condition으로 이를 확인할 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Segment\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"Government\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token string\">\"\"</span>\"\n     Segment\n<span class=\"token number\">0</span>       <span class=\"token boolean\">True</span>\n<span class=\"token number\">1</span>       <span class=\"token boolean\">True</span>\n<span class=\"token number\">2</span>      <span class=\"token boolean\">False</span>\n<span class=\"token number\">3</span>      <span class=\"token boolean\">False</span>\n<span class=\"token number\">4</span>      <span class=\"token boolean\">False</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">695</span>    <span class=\"token boolean\">False</span>\n<span class=\"token number\">696</span>    <span class=\"token boolean\">False</span>\n<span class=\"token number\">697</span>     <span class=\"token boolean\">True</span>\n<span class=\"token number\">698</span>     <span class=\"token boolean\">True</span>\n<span class=\"token number\">699</span>    <span class=\"token boolean\">False</span></code></pre></div>\n<p>원하는 Segment column의 값이 ‘Government’인지 여부를 확인하였다<br />\n(<code class=\"language-text\">==</code>뿐만 아니라 <code class=\"language-text\">></code>, <code class=\"language-text\">!=</code>, <code class=\"language-text\">&lt;=</code>등도 사용이 가능하다)</p>\n<p>이 불리언 값으로 표현된 <code class=\"language-text\">Series</code>를 사용하여 <code class=\"language-text\">DataFrame</code>을 필터링 할 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">[</span>ex<span class=\"token punctuation\">[</span><span class=\"token string\">\"Segment\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"Government\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n        Segment                   Country    Product Discount Band  Units Sold  Manufacturing Price  ...      COGS     Profit       Date  Month Number  Month Name  Year\n0    Government                    Canada  Carretera          None      1618.5                    3  ...   16185.0   16185.00 2014-01-01             1     January  2014\n1    Government                   Germany  Carretera          None      1321.0                    3  ...   13210.0   13210.00 2014-01-01             1     January  2014\n5    Government                   Germany  Carretera          None      1513.0                    3  ...  393380.0  136170.00 2014-12-01            12    December  2014\n8    Government                    France    Montana          None      1899.0                    5  ...   18990.0   18990.00 2014-06-01             6        June  2014\n13   Government                   Germany    Montana          None      2146.0                    5  ...   10730.0    4292.00 2014-09-01             9   September  2014\n..          ...                       ...        ...           ...         ...                  ...  ...       ...        ...        ...           ...         ...\n...\n688  Government                    Canada        VTT          High       865.5                  250  ...    8655.0    6058.50 2014-07-01             7        July  2014\n690  Government  United States of America        VTT          High       267.0                  250  ...    2670.0    1869.00 2013-10-01            10     October  2013\n694  Government                    France        VTT          High       293.0                  250  ...    2930.0    2051.00 2014-12-01            12    December  2014\n697  Government                    Mexico    Montana          High      1368.0                    5  ...    6840.0    1299.60 2014-02-01             2    February  2014\n698  Government                    Canada      Paseo          High       723.0                   10  ...    3615.0     686.85 2014-04-01             4       April  2014\n\n[300 rows x 16 columns]\n\"\"\"</span></code></pre></div>\n<p><code class=\"language-text\">or</code>과 <code class=\"language-text\">and</code>도 사용이 가능한데 중요한 것은 <code class=\"language-text\">or</code>은 <code class=\"language-text\">|</code>로 <code class=\"language-text\">and</code>는 <code class=\"language-text\">&amp;</code>로 표현해야만 한다는 것이다</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">[</span><span class=\"token string\">\"Manufacturing Price\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">[</span><span class=\"token string\">\"Manufacturing Price\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n        Segment  Country    Product Discount Band  Units Sold  Manufacturing Price  ...      COGS    Profit       Date  Month Number  Month Name  Year\n0    Government   Canada  Carretera          None      1618.5                    3  ...   16185.0  16185.00 2014-01-01             1     January  2014\n1    Government  Germany  Carretera          None      1321.0                    3  ...   13210.0  13210.00 2014-01-01             1     January  2014\n2     Midmarket   France  Carretera          None      2178.0                    3  ...   21780.0  10890.00 2014-06-01             6        June  2014\n3     Midmarket  Germany  Carretera          None       888.0                    3  ...    8880.0   4440.00 2014-06-01             6        June  2014\n4     Midmarket   Mexico  Carretera          None      2470.0                    3  ...   24700.0  12350.00 2014-06-01             6        June  2014\n..          ...      ...        ...           ...         ...                  ...  ...       ...       ...        ...           ...         ...   ...\n630   Midmarket   Canada  Carretera          High      2300.0                    3  ...   23000.0   6670.00 2014-12-01            12    December  2014\n631  Enterprise   Mexico  Carretera          High      2821.0                    3  ...  338520.0 -35262.50 2013-12-01            12    December  2013\n666  Enterprise   France  Carretera          High      1174.0                    3  ...  140880.0 -16142.50 2014-08-01             8      August  2014\n667  Enterprise  Germany  Carretera          High      2767.0                    3  ...  332040.0 -38046.25 2014-08-01             8      August  2014\n668  Enterprise  Germany  Carretera          High      1085.0                    3  ...  130200.0 -14918.75 2014-10-01            10     October  2014\n\n[93 rows x 16 columns]\n\"\"\"</span></code></pre></div>\n<blockquote>\n<p>✔ <code class=\"language-text\">or</code>의 경우 <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.Series.isin.html?highlight=isin\">.isin()</a>으로 대체할 수 있다</p>\n</blockquote>\n<p>해당 값이 <code class=\"language-text\">null</code>이 아닌 것을 확인하기 위해서는 <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.Series.notna.html?highlight=notna\">.notna()</a>를 사용하면 된다</p>\n<h2 id=\"4-3-판다스로-특정-row--column-선택하기\" style=\"position:relative;\"><a href=\"#4-3-%ED%8C%90%EB%8B%A4%EC%8A%A4%EB%A1%9C-%ED%8A%B9%EC%A0%95-row--column-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0\" aria-label=\"4 3 판다스로 특정 row  column 선택하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-3. 판다스로 특정 row &#x26; column 선택하기</h2>\n<p>이제 두 조건을 합쳐서 필터링해보자</p>\n<p>이때에는 다음과 같이 <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.loc.html?highlight=loc\">.loc[row, col]</a>을 사용한다</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>ex<span class=\"token punctuation\">[</span><span class=\"token string\">\"Segment\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"Government\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Country\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n0                        Canada\n1                       Germany\n5                       Germany\n8                        France\n13                      Germany\n                 ...\n688                      Canada\n690    United States of America\n694                      France\n697                      Mexico\n698                      Canada\nName: Country, Length: 300, dtype: object\n\"\"\"</span></code></pre></div>\n<h1 id=\"5-와이프-업무-자동화-하기\" style=\"position:relative;\"><a href=\"#5-%EC%99%80%EC%9D%B4%ED%94%84-%EC%97%85%EB%AC%B4-%EC%9E%90%EB%8F%99%ED%99%94-%ED%95%98%EA%B8%B0\" aria-label=\"5 와이프 업무 자동화 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 와이프 업무 자동화 하기</h1>\n<p>와이프의 업무 중 엑셀로 정리하는 업무가 있는데 개괄적인 업무 흐름을 보면</p>\n<ol>\n<li>출고된 택배의 송장번호, 출고된 물품을 엑셀로 정리</li>\n<li>해당 엑셀을 바탕으로 재고관리엑셀파일을 정리</li>\n</ol>\n<p>사실 나는 이 업무 흐름이 썩 효율적이라고 생각은 하지 않는다</p>\n<p>지금은 <code class=\"language-text\">1.</code>에서 출고된 물품을 정리할 때 <strong>의자1,책상1,신발3,책장1</strong>이런식으로 하나의 셀에 다 넣는 방식으로 하고 있는데 처음부터 따로따로 작성을 한다면 그 작성된 파일을 바탕으로 재고관리 파일은 자동으로 관리되도록 할 수 있다</p>\n<p>하지만 모든 업무에는 레거시가 존재하고 변화를 원치않는 사람도 존재한다</p>\n<p>그리고 이참에 파이썬을 공부해볼 수 있고 이를 통해 와이프에게 코딩의 중요성을 일깨워주는 계기라고 생각하니 내게는 <code class=\"language-text\">비효율적 업무</code>보단 <code class=\"language-text\">괜찮은 기회</code>로 느껴졌다</p>\n<h2 id=\"5-1-의사코드\" style=\"position:relative;\"><a href=\"#5-1-%EC%9D%98%EC%82%AC%EC%BD%94%EB%93%9C\" aria-label=\"5 1 의사코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5-1. 의사코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 택배 관리 엑셀을 불러온다\n2. result라는 dictionary를 만들어서 모든 물품명들을 넣고 기본값으로 0개를 넣는다\n3. '오늘 날짜'에 해당되는 셀만 불러와서 물품명들을 split하여 products라는 list에 담는다\n4. 정규표현식을 이용해 list내의 각 물품들이 몇개인지를 더해 result에 해당 물품에 더해준다\n5. 재고관리엑셀을 읽어서 기존 row의 length를 알아내고 시작지점을 length + 1로 잡는다\n6. 완성된 dictionary를 가지고 length + 1 지점부터 값이 1이상인 것을 적는다\n7. 1 ~ 6이 종료되면 파일을 저장한다</code></pre></div>\n<blockquote>\n<p>📌 회사 업무이므로 구체적인 엑셀의 구조 등은 밝히지 않도록 하겠다</p>\n</blockquote>\n<h2 id=\"5-2-의사코드를-코드화하기\" style=\"position:relative;\"><a href=\"#5-2-%EC%9D%98%EC%82%AC%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%BD%94%EB%93%9C%ED%99%94%ED%95%98%EA%B8%B0\" aria-label=\"5 2 의사코드를 코드화하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5-2. 의사코드를 코드화하기</h2>\n<ol>\n<li>택배 관리 엑셀을 불러온다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">parcel <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'택배바코드.xlsx'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'택배'</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li>result라는 dictionary를 만들어서 모든 물품명들을 넣고 기본값으로 0개를 넣는다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">result <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'의자'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'책상'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>‘오늘 날짜’에 해당되는 셀만 불러와서 물품명들을 split하여 products라는 list에 담는다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\nTODAY <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span>today<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nproducts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\ntarget <span class=\"token operator\">=</span> parcel<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>parcel<span class=\"token punctuation\">[</span><span class=\"token string\">'날짜'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> TODAY<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'물품명'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> target<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">:</span>\n  product_name <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span><span class=\"token string\">'물품명'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n  split_list <span class=\"token operator\">=</span> product_name<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n\n  products <span class=\"token operator\">+=</span> split_list</code></pre></div>\n<ol start=\"4\">\n<li><a href=\"https://alpaca92.github.io/dev/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4\">정규표현식</a>을 이용해 list내의 각 물품들이 몇개인지를 더해 result에 해당 물품에 더해준 후 출력해준다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">create_inventory_df</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">,</span> today<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  dates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  amounts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  \n  <span class=\"token keyword\">for</span> key <span class=\"token keyword\">in</span> keys<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> result<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'amount'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n      dates <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>today <span class=\"token operator\">+</span> <span class=\"token string\">' 택배'</span><span class=\"token punctuation\">]</span>\n      names <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>result<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n      amounts <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>result<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'amount'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n      \n  delivered_today <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'날짜'</span><span class=\"token punctuation\">:</span> dates<span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'제품명'</span><span class=\"token punctuation\">:</span> names<span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'출고'</span><span class=\"token punctuation\">:</span> amounts\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>delivered_today<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>*references</h2>\n<ol>\n<li><a href=\"https://wikidocs.net/book/2155\">딥 러닝을 이용한 자연어 처리 입문</a></li>\n<li><a href=\"https://pandas.pydata.org/\">Pandas</a></li>\n</ol>","frontmatter":{"title":"python으로 엑셀 읽고 쓰기","date":"May 11, 2022"}}},"pageContext":{"slug":"/python/python으로-엑셀-읽고-쓰기/","previous":{"fields":{"slug":"/dev/ip란-무엇인가/"},"frontmatter":{"title":"IP란 무엇인가"}},"next":{"fields":{"slug":"/dev/정규표현식에-대한-이해/"},"frontmatter":{"title":"정규표현식에 대한 이해"}}}}}